// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Sanket Patil",
            "email": "yourname@example.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/watchlist/create": {
            "post": {
                "description": "Create a new watchlist for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Create a new watchlist",
                "parameters": [
                    {
                        "description": "Watchlist Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateWatchlistSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/watchlist/get": {
            "post": {
                "description": "Creates a new stock watchlist for a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Create a new watchlist",
                "parameters": [
                    {
                        "description": "Get Watchlist Payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GetUserWatchlistsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetUserWatchlistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/watchlist/remove": {
            "post": {
                "description": "Delete a watchlist for a specific user by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Watchlist"
                ],
                "summary": "Delete a watchlist",
                "parameters": [
                    {
                        "description": "Delete Watchlist Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DeleteWatchlistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DeleteWatchlistResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateWatchlistRequest": {
            "type": "object",
            "required": [
                "userId",
                "watchlistName"
            ],
            "properties": {
                "userId": {
                    "type": "integer",
                    "example": 101
                },
                "watchlistName": {
                    "type": "string",
                    "example": "Tech Stocks"
                }
            }
        },
        "model.CreateWatchlistSuccessResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "Watchlist created successfully"
                }
            }
        },
        "model.DeleteWatchlistRequest": {
            "type": "object",
            "required": [
                "userId",
                "watchlistName"
            ],
            "properties": {
                "userId": {
                    "type": "integer"
                },
                "watchlistName": {
                    "type": "string"
                }
            }
        },
        "model.DeleteWatchlistResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.GetUserWatchlistsRequest": {
            "type": "object",
            "required": [
                "userId"
            ],
            "properties": {
                "userId": {
                    "type": "integer",
                    "example": 101
                }
            }
        },
        "model.GetUserWatchlistsResponse": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer"
                },
                "watchlists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WatchlistInfo"
                    }
                }
            }
        },
        "model.WatchlistInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "watchlistName": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Watchlist API",
	Description:      "This is an API for managing stock watchlists",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
